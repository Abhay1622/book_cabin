// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cabin {
  id            String   @id @default(cuid())
  name          String
  guests        Int
  price         Int
  originalPrice Int?
  image         String
  description   String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("cabins")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}

model Reservation {
  id            String   @id @default(cuid())
  cabinName     String
  userId        String
  userEmail     String
  startDate     DateTime
  endDate       DateTime
  numberOfGuests Int
  numberOfNights Int
  pricePerNight  Int
  totalPrice    Int
  currency      String   @default("INR")
  specialRequests String?
  status        String   @default("confirmed")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("reservations")
}